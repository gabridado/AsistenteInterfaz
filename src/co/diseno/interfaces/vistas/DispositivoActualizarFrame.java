package co.diseno.interfaces.vistas;

import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

import java.awt.Image;
import java.io.File;

import co.diseno.interfaces.controladores.PrincipalControlador;
import co.diseno.interfaces.modelos.Dispositivo;

/**
 *
 * @author Gabriel.
 */
public class DispositivoActualizarFrame extends javax.swing.JInternalFrame {

    private boolean fotoSeleccionada;
    private String rutaFoto;
    private PrincipalControlador principalControlador;

    /**
     * Creates new form DispositivoActualizarFrame
     * 
     * @param principalControlador Controlador principal.
     */
    public DispositivoActualizarFrame(PrincipalControlador principalControlador) {
        initComponents();

        this.principalControlador = principalControlador;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnBuscar = new javax.swing.JButton();
        lblFotoDispositivo = new javax.swing.JLabel();
        lblLocalizacion = new javax.swing.JLabel();
        txtLocalizacion = new javax.swing.JTextField();
        lblFoto = new javax.swing.JLabel();
        lblDireccionIp = new javax.swing.JLabel();
        txtDireccionIp = new javax.swing.JTextField();
        lblDireccionMac = new javax.swing.JLabel();
        txtDireccionMac = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        btnSeleccionarFoto = new javax.swing.JButton();
        lblFotoNueva = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Dispositivo - Actualizar");
        setToolTipText("");

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        lblLocalizacion.setText("Localización:");

        lblFoto.setText("Foto actual:");

        lblDireccionIp.setText("Dirección IP:");

        lblDireccionMac.setText("Dirección MAC:");

        lblNombre.setText("Nombre:");

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnSeleccionarFoto.setText("Seleccionar...");
        btnSeleccionarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarFotoActionPerformed(evt);
            }
        });

        lblFotoNueva.setText("Foto nueva:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                .createSequentialGroup()
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblDireccionIp)
                                                        .addComponent(lblLocalizacion)
                                                        .addComponent(lblFoto))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addComponent(txtDireccionIp,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, 226,
                                                                Short.MAX_VALUE)
                                                        .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(txtLocalizacion,
                                                                javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(lblFotoDispositivo,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout
                                                .createSequentialGroup()
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(lblNombre)
                                                        .addComponent(lblDireccionMac)
                                                        .addComponent(lblFotoNueva))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74,
                                                        Short.MAX_VALUE)
                                                .addGroup(layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addComponent(btnSeleccionarFoto,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnActualizar,
                                                                javax.swing.GroupLayout.DEFAULT_SIZE, 226,
                                                                Short.MAX_VALUE)
                                                        .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                226, Short.MAX_VALUE)
                                                        .addComponent(txtDireccionMac))))
                                .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblNombre)
                                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(lblDireccionIp)
                                        .addComponent(txtDireccionIp, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtLocalizacion, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblLocalizacion))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblFoto)
                                                .addGap(0, 114, Short.MAX_VALUE))
                                        .addComponent(lblFotoDispositivo, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(btnSeleccionarFoto)
                                        .addComponent(lblFotoNueva))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtDireccionMac, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblDireccionMac))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnActualizar)
                                .addGap(14, 14, 14)));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnBuscarActionPerformed
        String nombre = txtNombre.getText().trim();
        String direccionIp = txtDireccionIp.getText().trim();

        if (nombre.isEmpty() && direccionIp.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un nombre o una dirección IP", "Error",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!nombre.isEmpty()) {
            Dispositivo dispositivo = principalControlador.buscarDispositivoPorNombre(nombre);

            if (dispositivo == null) {
                JOptionPane.showMessageDialog(this, "No se encontró ningún dispositivo con el nombre ingresado",
                        "Error", JOptionPane.ERROR_MESSAGE);
                btnActualizar.setEnabled(false);
                return;
            }

            txtDireccionIp.setText(dispositivo.getIp());
            txtLocalizacion.setText(dispositivo.getLocalizacion());
            txtDireccionMac.setText(dispositivo.getDireccionMac());

            ImageIcon icon = new ImageIcon(dispositivo.getFoto());
            Image image = icon.getImage().getScaledInstance(lblFotoDispositivo.getWidth(),
                    lblFotoDispositivo.getHeight(), Image.SCALE_SMOOTH);
            lblFotoDispositivo.setIcon(new ImageIcon(image));

            btnActualizar.setEnabled(true);
            return;
        }

        if (!direccionIp.isEmpty()) {
            Dispositivo dispositivo = principalControlador.buscarDispositivoPorIp(direccionIp);

            if (dispositivo == null) {
                JOptionPane.showMessageDialog(this, "No se encontró ningún dispositivo con la dirección IP ingresada",
                        "Error", JOptionPane.ERROR_MESSAGE);
                btnActualizar.setEnabled(false);
                return;
            }

            txtNombre.setText(dispositivo.getNombre());
            txtLocalizacion.setText(dispositivo.getLocalizacion());
            txtDireccionMac.setText(dispositivo.getDireccionMac());

            ImageIcon icon = new ImageIcon(dispositivo.getFoto());
            Image image = icon.getImage().getScaledInstance(lblFotoDispositivo.getWidth(),
                    lblFotoDispositivo.getHeight(), Image.SCALE_SMOOTH);
            lblFotoDispositivo.setIcon(new ImageIcon(image));
            btnActualizar.setEnabled(true);
            return;
        }

        JOptionPane.showMessageDialog(this, "No se encontró ningún dispositivo con los datos ingresados", "Error",
                JOptionPane.WARNING_MESSAGE);

        txtLocalizacion.setText("");
        txtDireccionMac.setText("");
        lblFotoDispositivo.setIcon(null);
        btnActualizar.setEnabled(false);
    }// GEN-LAST:event_btnBuscarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnActualizarActionPerformed
        String localizacion = txtLocalizacion.getText().trim();

        if (localizacion.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe ingresar una localización", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!fotoSeleccionada) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una foto", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Dispositivo dispositivo = new Dispositivo();
        dispositivo.setNombre(txtNombre.getText().trim());
        dispositivo.setIp(txtDireccionIp.getText().trim());
        dispositivo.setLocalizacion(localizacion);
        dispositivo.setDireccionMac(txtDireccionMac.getText().trim());
        dispositivo.setFoto(rutaFoto);

        if (principalControlador.actualizarDispositivo(dispositivo)) {
            JOptionPane.showMessageDialog(this, "Dispositivo actualizado correctamente", "Información",
                    JOptionPane.INFORMATION_MESSAGE);
            btnActualizar.setEnabled(false);
            txtLocalizacion.setText("");
            txtDireccionMac.setText("");
            lblFotoDispositivo.setIcon(null);
            lblFotoNueva.setIcon(null);
            fotoSeleccionada = false;
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo actualizar el dispositivo", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }// GEN-LAST:event_btnActualizarActionPerformed

    private void btnSeleccionarFotoActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_btnSeleccionarFotoActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setFileFilter(new FileNameExtensionFilter("Imágenes", "jpg", "png", "jpeg"));
        int resultado = fileChooser.showOpenDialog(this);
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();
            if (archivo != null) {
                fotoSeleccionada = true;
                rutaFoto = archivo.getAbsolutePath();
            }
        } else {
            fotoSeleccionada = false;
        }
    }// GEN-LAST:event_btnSeleccionarFotoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnSeleccionarFoto;
    private javax.swing.JLabel lblDireccionIp;
    private javax.swing.JLabel lblDireccionMac;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblFotoDispositivo;
    private javax.swing.JLabel lblFotoNueva;
    private javax.swing.JLabel lblLocalizacion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JTextField txtDireccionIp;
    private javax.swing.JTextField txtDireccionMac;
    private javax.swing.JTextField txtLocalizacion;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
