package co.diseno.interfaces.vistas;

import java.io.File;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

import co.diseno.interfaces.controladores.PrincipalControlador;
import co.diseno.interfaces.modelos.Dispositivo;
import co.diseno.interfaces.util.Utilidades;

/**
 *
 * @author Gabriel.
 */
public class DispositivoCrearFrame extends javax.swing.JInternalFrame {

    private boolean fotoSeleccionada;
    private String rutaFoto;
    private PrincipalControlador principalControlador;

    /**
     * Creates new form DispositivoCrearFrame
     */
    public DispositivoCrearFrame(PrincipalControlador principalControlador) {
        initComponents();

        fotoSeleccionada = false;
        rutaFoto = "";

        this.principalControlador = principalControlador;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        lblLocalizacion = new javax.swing.JLabel();
        txtLocalizacion = new javax.swing.JTextField();
        btnSeleccionarFoto = new javax.swing.JButton();
        lblFoto = new javax.swing.JLabel();
        lblDireccionIp = new javax.swing.JLabel();
        txtDireccionIp = new javax.swing.JTextField();
        lblDireccionMac = new javax.swing.JLabel();
        txtDireccionMac = new javax.swing.JTextField();
        btnCrear = new javax.swing.JButton();

        setClosable(true);
        setTitle("Dispositivo - Crear");

        lblNombre.setText("Nombre:");

        lblLocalizacion.setText("Localización:");

        btnSeleccionarFoto.setText("Seleccionar...");
        btnSeleccionarFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSeleccionarFotoActionPerformed(evt);
            }
        });

        lblFoto.setText("Foto:");

        lblDireccionIp.setText("Dirección IP:");

        lblDireccionMac.setText("Dirección MAC:");

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombre)
                    .addComponent(lblLocalizacion)
                    .addComponent(lblFoto)
                    .addComponent(lblDireccionIp)
                    .addComponent(lblDireccionMac))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                    .addComponent(btnSeleccionarFoto, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                    .addComponent(txtLocalizacion)
                    .addComponent(txtNombre)
                    .addComponent(txtDireccionIp)
                    .addComponent(txtDireccionMac))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombre)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLocalizacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLocalizacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSeleccionarFoto)
                    .addComponent(lblFoto))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccionIp)
                    .addComponent(txtDireccionIp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDireccionMac)
                    .addComponent(txtDireccionMac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCrear)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        String nombre = txtNombre.getText().trim();
        String localizacion = txtLocalizacion.getText().trim();
        String direccionIp = txtDireccionIp.getText().trim();
        String direccionMac = txtDireccionMac.getText().trim();

        if (nombre.isEmpty() || localizacion.isEmpty() || direccionIp.isEmpty() || direccionMac.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe completar todos los campos", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (principalControlador.existeDispositivo(nombre)) {
            JOptionPane.showMessageDialog(this, "Ya existe un dispositivo con ese nombre", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!Utilidades.esDireccionIpValida(direccionIp)) {
            JOptionPane.showMessageDialog(this, "La dirección IP no es válida", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (principalControlador.buscarDispositivoPorIp(direccionIp) != null) {
            JOptionPane.showMessageDialog(this, "Ya existe un dispositivo con esa dirección IP", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!Utilidades.esDireccionMacValida(direccionMac)) {
            JOptionPane.showMessageDialog(this, "La dirección MAC no es válida", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (principalControlador.buscarDispositivoPorMac(direccionMac) != null) {
            JOptionPane.showMessageDialog(this, "Ya existe un dispositivo con esa dirección MAC", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!fotoSeleccionada) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar una foto", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Dispositivo dispositivo = new Dispositivo(nombre, localizacion, rutaFoto, direccionIp, direccionMac);

        if (principalControlador.crearDispositivo(dispositivo)) {
            JOptionPane.showMessageDialog(this, "Dispositivo creado correctamente", "Información", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "No se pudo crear el dispositivo", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnSeleccionarFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSeleccionarFotoActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        fileChooser.setFileFilter(new FileNameExtensionFilter("Imágenes", "jpg", "png", "jpeg"));
        int resultado = fileChooser.showOpenDialog(this);
        if (resultado == JFileChooser.APPROVE_OPTION) {
            File archivo = fileChooser.getSelectedFile();
            if (archivo != null) {
                fotoSeleccionada = true;
                rutaFoto = archivo.getAbsolutePath();
            }
        } else {
            fotoSeleccionada = false;
        }
    }//GEN-LAST:event_btnSeleccionarFotoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnSeleccionarFoto;
    private javax.swing.JLabel lblDireccionIp;
    private javax.swing.JLabel lblDireccionMac;
    private javax.swing.JLabel lblFoto;
    private javax.swing.JLabel lblLocalizacion;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JTextField txtDireccionIp;
    private javax.swing.JTextField txtDireccionMac;
    private javax.swing.JTextField txtLocalizacion;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
